version: '3.8'

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    command: >
      bash -c "
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      echo \"from django.contrib.auth import get_user_model; User = get_user_model(); 
      User.objects.filter(username='${DJANGO_SUPERUSER_USERNAME}').exists() or 
      User.objects.create_superuser('${DJANGO_SUPERUSER_USERNAME}', '${DJANGO_SUPERUSER_EMAIL}', '${DJANGO_SUPERUSER_PASSWORD}')\" | python manage.py shell &&
      gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
      "
    volumes:
      - ./backend:/app
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./.env
    networks:
      - backend
      - frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile.react
    ports:
      - "3000:3000"
    networks:
      - frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:16
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 1m30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  backend:
  frontend: