version: '3.8'

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.django
    command: gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
    volumes:
      - ./backend:/app
      - ./frontend/build:/app/frontend/build
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile.react
    ports:
      - "80:80"
    networks:
      - frontend
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 1m30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  backend:
  frontend:
